"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
const express_1 = __importDefault(require("express"));
const auth_middleware_1 = require("../middleware/auth.middleware");
const uploadCourse_controllers_1 = require("../controllers/course/uploadCourse.controllers");
const multer_middleware_1 = require("../middleware/multer.middleware");
const getCourses_controllers_1 = require("../controllers/course/getCourses.controllers");
const updateCourse_controllers_1 = require("../controllers/course/updateCourse.controllers");
const enrolledCourses_controllers_1 = require("../controllers/course/enrolledCourses.controllers");
const deleteCourse_controllers_1 = require("../controllers/course/deleteCourse.controllers");
const courseRoute = express_1.default.Router();
// courseRoute.get("/" , handleFetchAllCourseFunction);
// courseRoute.get("/:slug" , handleSelectedCourseFunction);
courseRoute.post("/get-course", getCourses_controllers_1.handleFetchCourseByIdFunction);
courseRoute.get("/get-course-filter", getCourses_controllers_1.handleFetchAllCoursesAsPerParams);
courseRoute.get("/get-course-search", getCourses_controllers_1.handleGetCourseBySearchParams);
courseRoute.get("/get-all-courses", getCourses_controllers_1.handleFetchAllCoursesFunction);
courseRoute.get("/get-admin-courses", auth_middleware_1.authenticateAdminToken, getCourses_controllers_1.handleGetCoursesByUserIdFunction);
courseRoute.get("/get-user-enrolled-courses", auth_middleware_1.authenticateToken, enrolledCourses_controllers_1.handleGetAllCoursesEnrolledByUser);
courseRoute.post("/enroll-in-course", auth_middleware_1.authenticateToken, enrolledCourses_controllers_1.handleUserEnrolledCourseFunction);
courseRoute.post("/add-course/youtube", auth_middleware_1.authenticateAdminToken, multer_middleware_1.upload.single("youtubeCourseImage"), uploadCourse_controllers_1.handleAddNewYoutubeCourseFunction);
courseRoute.post("/add-course/personal", auth_middleware_1.authenticateAdminToken, multer_middleware_1.upload.single("personalCourseImage"), uploadCourse_controllers_1.handleAddNewPersonalCourseFunction);
courseRoute.post("/add-course/redirect", auth_middleware_1.authenticateAdminToken, multer_middleware_1.upload.single("redirectCourseImage"), uploadCourse_controllers_1.handleAddNewRedirectCourseFunction);
courseRoute.put("/update-course/youtube", auth_middleware_1.authenticateAdminToken, multer_middleware_1.upload.single("youtubeCourseImage"), updateCourse_controllers_1.handleUpdateYoutubeCourseFunction);
courseRoute.put("/update-course/personal", auth_middleware_1.authenticateAdminToken, multer_middleware_1.upload.single("personalCourseImage"), updateCourse_controllers_1.handleUpdatePersonalCourseFunction);
courseRoute.put("/update-course/redirect", auth_middleware_1.authenticateAdminToken, multer_middleware_1.upload.single("redirectCourseImage"), updateCourse_controllers_1.handleUpdateRedirectCourseFunction);
courseRoute.post("/delete-course", auth_middleware_1.authenticateAdminToken, deleteCourse_controllers_1.handleDeleteCourseFunction);
exports.default = courseRoute;
